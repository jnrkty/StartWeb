/**
 * ----<연상배열>----
 * 
 * 배열에서는 순서번호 대신에 문자열을 가지고 특정요소를 참조할 수 있다
 * 
 * num = [];
 * 1) 변수이름[단어] = 값;
 * num["dog"] = "멍멍이"; //번호대신 dog라는 단어로 대신함
 * num["cat"] = "야옹이";
 * 
 * 2) 변수이름.단어 = 값;
 * num.red = "빨강";
 * num.yellow = "노랑";
 * 
 * 읽어올 경우)
 * 1) 변수 = 변수이름[단어];
 *    name = num["dog"]; -> name 변수 안에는 멍멍이
 * 2) 변수 = 변수이름.단어;
 *    name = num.red; -> name 변수 안에 빨강
 */
ani = [];
ani.dog = "멍멍이";
ani.cat = "애옹이";

console.log(ani); //개발자도구로 볼 수있음

/**
 * ----<이차원 배열>----
 * 
 * 일차원 배열 = 그냥 배열
 * 이차원 배열 = 배열 안에 있는 배열, 배열과 배열을 조합해서 표처럼 만든 배열임
 * 
 * 기본형태)
 * 배열이름[순서번호1] = [데이터1, 데이터2];
 */

b = [];
b[0] = ["빨강", "붉다"];
b[0][0]
b[1] = ["파랑", "푸르스름하다"];

console.log(b[0][1]) //0행(빨강), 1열(붉다)

/** ----<배열요소 잘라내기>----
 * 
 * 배열요소의 일부를 잘라내어 새로운 배열을 만든다
 * slice(자르기 시작하는 순서번호(여기서부터 자른다), 자르기 직전의 순서번호(이거 전까지 자른다));
 * slice()함수는 리턴값이 배열이다
 * 원본 배열은 바뀌지 않는다
 */
a = [1, 2, 3, 4];
b = a.slice(1, 3);

console.log(b);

/**
 * ----<배열요소 제거하기>----
 * 
 * 배열에서 특정한 요소를 제거하려면 delete연산자를 활용한다
 * delete 배열이름[순서번호];
 * 뒤에 [순서번호]를 입력하지 않으면 배열 전체가 사라진다
 */
a = [1,2,3,4];
delete a[1]; 

console.log(a);

/**
 * ----<배열의 처음과 끝에 요소 추가하기>----
 * 
 * 배열의 처음에 요소를 추가하려면 배열이름.unshift() 함수를 활용한다
 * 배열의 끝에 요소를 추가하려면 push() 함수를 활용한다
 * 
 * 배열이름.unshift();
 * 배열이름.push();
 */
a = [1, 2];
a.unshift(3);
console.log(a);

a.push(4);
console.log(a);

/**
 * ----<배열의 처음과 끝의 요소 제거하기>----
 * 
 * 배열의 처음 요소를 제거하려면 shift()함수를 활용한다
 * 배열의 마지막 요소를 제거하려면 pop()함수를 활용한다
 * 제거한 배열의 값을 리턴한다
 * 
 * 배열이름.shift();
 * 배열이름.pop();
 */
b = [1, 2, 3];
c = b.shift(); //맨처음이 지워진다

console.log(c); //지워진 1번 표시
console.log(b);

b = [1, 2, 3];
c = b.pop(); //맨끝이 지워진다

console.log(c); //지워진 3번 표시
console.log(b);


